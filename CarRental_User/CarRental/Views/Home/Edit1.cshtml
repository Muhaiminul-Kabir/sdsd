@model CarRental.Models.rental

@{
    ViewBag.Title = "Edit1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit1</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>rental</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @if (Session["IdUs"] != null)
    {
        <div class="col-md-10">
            @Html.EditorFor(model => model.customer_id, new { htmlAttributes = new { @class = "form-control", @Value = Session["IdUs"], @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.customer_id, "", new { @class = "text-danger" })
        </div>

    }
    else
    {

        <div class="col-md-10">
            @Html.EditorFor(model => model.customer_id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.customer_id, "", new { @class = "text-danger" })
        </div>

    }

    <div class="form-group">
        @Html.LabelFor(model => model.car_id, "car_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("car_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.car_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pickup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pickup, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pickup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dropoff, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dropoff, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dropoff, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.total_run, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.total_run, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.total_run, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.rate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.total_amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.total_amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.total_amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.driver_id, "driver_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("driver_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.driver_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
